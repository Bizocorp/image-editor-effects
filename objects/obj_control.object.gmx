<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
game_ini();
//alarm[11] = 1; //For Mobile

//View Surface
cam_surface = -1;

//Uniforms
color_curve = shader_get_sampler_index(shaderCurves,"texCurve");
uniform_hue = shader_get_uniform(shaderHueSatLum, "hue");
uniform_sat = shader_get_uniform(shaderHueSatLum, "sat");
uniform_lum = shader_get_uniform(shaderHueSatLum, "lum");
uniform_brightness = shader_get_uniform(shaderBrightnessContrast, "brightness");
uniform_contrast = shader_get_uniform(shaderBrightnessContrast, "contrast");
uniform_gamma = shader_get_uniform(shaderGamma, "gamma");
//Blend Uniforms
tex_screen = shader_get_sampler_index(shaderScreen,"texScreen");
tex_multiply = shader_get_sampler_index(shaderMultiply,"texMultiply");
tex_overlay = shader_get_sampler_index(shaderOverlay,"texOverlay");
tex_colorburn = shader_get_sampler_index(shaderColorBurn,"texColorBurn");
tex_colordodge = shader_get_sampler_index(shaderColorDodge,"texColorDodge");
tex_divide = shader_get_sampler_index(shaderDivide,"texDivide");
tex_exclusion = shader_get_sampler_index(shaderExclusion,"texExclusion");

//Moible Uniforms
tex_exclusion_moible = shader_get_sampler_index(shaderExclusionMobile,"texExclusion");
uniform_display_width = shader_get_uniform(shaderExclusionMobile, "displayWidth");
uniform_display_height = shader_get_uniform(shaderExclusionMobile, "displayHeight");
uniform_display_button = shader_get_uniform(shaderExclusionMobile, "displayButton");
display_width = display_get_width();
display_height = display_get_height();
display_button = 64.0; //Android specific, if there are screen buttons

if (os_type == os_ios)
{
    display_button = 0.0; //iPhones/iPads don't have screen buttons, set to zero
}

shader_list_ini();

//Hue Saturation Luminocity
hue = 0.3;
sat = -0.25;
lum = 0.1;

//Contrast Brightness
contrast = 2.2; //0 == No Contrast, &gt;1 == More Contrast
brightness = -0.4; //0 == No added brightness. &gt;0 == brighter, &lt;0 == dimmer.

//Gamma
gamma = 2.2;

//Misc
display_ui = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mobile Specific Settings
//This sets the game resolution to the display resolution at the start for mobile devices. 
if (os_type == os_android || os_type == os_ios)
{
    global.res_w = display_get_width();
    global.res_h = display_get_height();
    global.aspect_ratio = (global.res_w / global.res_h);
}
config_apply();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control changing shaders
if (keyboard_check_pressed(vk_right) || keyboard_check_pressed(vk_space))
{
    shader_next();
}
if (keyboard_check_pressed(vk_left))
{
    shader_previous();
}
if (mouse_check_button_pressed(mb_left))
{
    if (mouse_x &lt; 64)
    {
        shader_previous();
    }
    if (mouse_x &gt; view_wview[0] - 64)
    {
        shader_next();
    }
}

//Control HSL
if (keyboard_check(ord('Q')))
{
    hue += 0.05;
}
if (keyboard_check(ord('W')))
{
    sat += 0.05;
}
if (keyboard_check(ord('E')))
{
    lum += 0.05;
}

if (keyboard_check(ord('A')))
{
    hue -= 0.05;
}
if (keyboard_check(ord('S')))
{
    sat -= 0.05;
}
if (keyboard_check(ord('D')))
{
    lum -= 0.05;
}

hue = clamp(hue, -1, 1)
sat = clamp(sat, -1, 1)
lum = clamp(lum, -1, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Camera Surface
shader_set(cur_shader);
shader_list_uniforms();
draw_surface(view_surface_id[0],0,0);
shader_reset();

//HUD
if (display_ui)
{
    hud_draw();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera Surface
//Have the view surface be editable.
if (!surface_exists(cam_surface))
{
    cam_surface = surface_create(view_wview, view_hview);
    surface_set_target(cam_surface);
    draw_clear_alpha(c_black, 0);
    surface_reset_target();
    view_surface_id[0] = cam_surface;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.fullscreen = !global.fullscreen;
config_apply();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disable UI
display_ui = !display_ui;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
